Referat 22.03.2022
Tilstede: Sara, Kristian; Adrian og Dani.
Halvparten av gruppen har problemer med å kjøre programmet i Eclipse/Intellij, tilsynelatende etter å ha kjørt koden i Visual Studio Code hvor den har blitt kompilert med en nyere versjon av Java.
Siden sist har gruppen delt seg i to for å jobbe med implementeringen av nettverk i forbindelse med multiplayer-funksjonen. Vi har angrepet problemet på to ulike måter. Sara og Adrian har jobbet med å implementere en selvstendig server, som de ulike klientene kan koble seg opp mot. Kristian og Dani har jobbet med løsningen hvor den ene klienten blir en server, som den andre spilleren knytter seg opp mot. Ingen av løsningene fungerer skikkelig ennå.

Referat 18.03.2022
Tilstede Adrian og Sara
Vi prøvde å jobbe på en bedre løsning for server client i branchen serverSplit, med målet å holde all bakgrunnslogikken i serveren for så å oppdatere dette i client. Har lagd noen planner for hva som må forandres med resten av programmet. Desverre gikk mesteparten av tiden git problemer.

Referat 17.03.2022
Tilstede Kristian og Dani
Vi hadde en ekstraøkt for å forsøke å komme videre med multiplayer over nettverk. Slik multiplayer fungerer nå, må klienten manuelt skrive inn ip-adressen til serveren. Dermed er "klient-spilleren" avhengig av å sitte ved siden av "server-spilleren". Dette ønsket vi å forbedre. Vi forsøkte først en løsning hvor vi ved hjelp av DatagramPacket og DatagramSocket-bibliotekene, broadcaster en pakke fra fra klient til server. Server sjekker at dette er fra klienten, og sender tilbake til serveren. Klienten får pakken fra serveren, og har med det også adressen. Dette viste seg ikke å fungere, da vi hadde misforstått hvordan send-metoden i DatagramSocket fungerte. Den ble ikke broadcastet slik vi så for oss.
Vi forsøkte da å benytte oss av Klient-klassen - arvet av kryonet - til å gjøre noe lignende. client.discoverHost skal gi oss adressen til serveren.

Referat 15.03.2022
Tilstede: Sara, Kristian; Adrian og Dani.
Vi jobber fremdeles med MultiPlayer-implementasjonen.
Vi har fortsatt jobbingen med multiplayer-løsningen vår. Vi er litt usikre på om den løsningen vi allerede har, er innenfor kriteriene for hva som er godkjent. Løsningen vi har er multiplayer på èn maskin. Vi har likevel implementert klassene som skal tillate oss å spille over nettverk, og ønsker å få til en multiplayer over LAN eller online.
Cons med løsningen vi har nå:
Vi sender kun koordinatene til de ulike spillerne.
Synkroniseringen er ikke nøyaktig nok, og kan føre til ulike gameStates hos de to ulike spillerne. Eksempelvis kan den ene spilleren dø uten at den andre spilleren blir oppdatert på dette.
Vi brainstormet deretter rundt ulike løsninger på dette:
Mulig løsning: Vi kan sende gameState over serveren. Dette har blitt forsøkt, og endte med overflow.
Mulig løsning2: Vi sender ikke all infoen, men viktig info på ulike intervaller. Eksempelvis må spillerne sjekke for om den andre er død.
Mulig løsning3: Spillerne må vente på bekreftelse på at informasjonen.
